---

- name: '{{ rules_cis.rule_4_1_1_1.description }}'
  ansible.builtin.lineinfile:
    dest: /etc/audit/auditd.conf
    regexp: "^max_log_file( |=)"
    line: "max_log_file = 10"
    state: present
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_1_1_1.enabled
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.1.1

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_1_1
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_1_2.description }}'
  ansible.builtin.lineinfile:
    dest: /etc/audit/auditd.conf
    regexp: "^admin_space_left_action"
    line: "admin_space_left_action = halt"
    state: present
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_1_1_2.enabled
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.1.2

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_1_2
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_1_3.description }}'
  ansible.builtin.lineinfile:
    dest: /etc/audit/auditd.conf
    regexp: "^max_log_file_action"
    line: "max_log_file_action = keep_logs"
    state: present
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_1_1_3.enabled
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.1.3

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_1_3
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_2.description }}'
  ansible.builtin.service:
    name: auditd
    state: started
    enabled: yes
  when:
    - rules_cis.rule_4_1_2.enabled
    - not rhel7cis_skip_for_travis
  register: _output_rule
  ignore_errors: yes
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.2

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_2
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_3.description }}'
  ansible.builtin.replace:
    dest: /etc/default/grub
    regexp: '(^GRUB_CMDLINE_LINUX\s*\=\s*)(?:")(.+)(?<!audit=1)(?:")'
    replace: '\1"\2 audit=1"'
  notify: generate new grub config
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_1_3.enabled
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.3

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_3
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_4.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_1_4.enabled
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.4
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_4
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_5.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_1_5.enabled
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.5
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_5
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_6.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_1_6.enabled
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.6
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_6
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_7.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_1_7.enabled
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.7
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_7
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_8.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_1_8.enabled
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.8
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_8
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_9.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_1_9.enabled
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.9
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_9
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_10.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_1_10.enabled
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.10
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_10
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_11.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_1_11.enabled
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.11
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_11
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_12.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_1_12.enabled
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.12
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_12
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_13.description }}'
  ansible.builtin.lineinfile:
    dest: /etc/audit/rules.d/audit.rules
    line: "-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts"
    state: present
  when:
    - rules_cis.rule_4_1_13.enabled
    - not rhel7cis_skip_for_travis
  register: _output_rule
  ignore_errors: yes
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.13

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_13
    _current_rule_output: '{{ _output_rule }}'


- name: '{{ rules_cis.rule_4_1_13.description }}'
  ansible.builtin.lineinfile:
    dest: /etc/audit/audit.rules
    line: "-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts"
    state: present
  when:
    - rules_cis.rule_4_1_13.enabled
    - not rhel7cis_skip_for_travis
  register: _output_rule
  ignore_errors: yes
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.13

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_13
    _current_rule_output: '{{ _output_rule }}'


- name: '{{ rules_cis.rule_4_1_13.description }}'
  ansible.builtin.lineinfile:
    dest: /etc/audit/rules.d/audit.rules
    line: "-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts"
    state: present
  when:
    - rules_cis.rule_4_1_13.enabled
    - not rhel7cis_skip_for_travis
  register: _output_rule
  ignore_errors: yes
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.13

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_13
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_14.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_1_14.enabled
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.14
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_14
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_15.description }}'
  ansible.builtin.lineinfile:
    dest: /etc/audit/rules.d/audit.rules
    line: "-w /etc/sudoers -p wa -k scope"
    state: present
  when:
    - rules_cis.rule_4_1_15.enabled
    - not rhel7cis_skip_for_travis
  register: _output_rule
  ignore_errors: yes
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.15

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_15
    _current_rule_output: '{{ _output_rule }}'


- name: '{{ rules_cis.rule_4_1_15.description }}'
  ansible.builtin.lineinfile:
    dest: /etc/audit/rules.d/audit.rules
    line: "-w /etc/sudoers.d -p wa -k scope"
    state: present
  when:
    - rules_cis.rule_4_1_15.enabled
    - not rhel7cis_skip_for_travis
  register: _output_rule
  ignore_errors: yes
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.15

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_15
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_16.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_1_16.enabled
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.16
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_16
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_17.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_1_17.enabled
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.17
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_17
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_1_18.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_1_18.enabled
  tags:
    - level2
    - auditd
    - patch
    - rule_4.1.18
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_1_18
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_2_1_1.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_2_1_1.enabled
  tags:
    - level1
    - level2
    - patch
    - rule_4.2.1.1
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_2_1_1
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_2_1_2.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_2_1_2.enabled
  tags:
    - level1
    - level2
    - patch
    - rule_4.2.1.2
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_2_1_2
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_2_1_3.description }}'
  ansible.builtin.lineinfile:
    dest: /etc/rsyslog.conf
    regexp: '^\$FileCreateMode'
    line: '$FileCreateMode 0640'
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_2_1_3.enabled
  tags:
    - level1
    - level2
    - patch
    - rule_4.2.1.3

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_2_1_3
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_2_1_4.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_2_1_4.enabled
  tags:
    - level1
    - level2
    - patch
    - rule_4.2.1.4
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_2_1_4
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_2_1_5.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_2_1_5.enabled
  tags:
    - level1
    - level2
    - patch
    - rule_4.2.1.5
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_2_1_5
    _current_rule_output: '{{ _output_rule }}'


- name: '{{ rules_cis.rule_4_2_1_5.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_2_1_5.enabled
  tags:
    - level1
    - level2
    - patch
    - rule_4.2.1.5
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_2_1_5
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_2_2_1.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_2_2_1.enabled
  tags:
    - level1
    - level2
    - patch
    - rule_4.2.2.1
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_2_2_1
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_2_2_2.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_2_2_2.enabled
  tags:
    - level1
    - level2
    - patch
    - rule_4.2.2.2
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_2_2_2
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_2_2_3.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_2_2_3.enabled
  tags:
    - level1
    - level2
    - patch
    - rule_4.2.2.3
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_2_2_3
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_2_2_4.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_2_2_4.enabled
  tags:
    - level1
    - level2
    - patch
    - rule_4.2.2.4
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_2_2_4
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_2_2_5.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_2_2_5.enabled
  tags:
    - level1
    - level2
    - patch
    - rule_4.2.2.5
    - notimplemented

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_2_2_5
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_2_3.description }}'
  ansible.builtin.yum:
    name: "{{ rhel7cis_syslog }}"
    state: present
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_2_3.enabled
  tags:
    - level1
    - level2
    - patch
    - rule_4.2.3

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_2_3
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_2_4.description }}'
  ansible.builtin.command: find /var/log -type f -exec chmod g-wx,o-rwx {} +
  changed_when: no
  failed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_2_4.enabled
  tags:
    - level1
    - level2
    - patch
    - rule_4.2.4

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_2_4
    _current_rule_output: '{{ _output_rule }}'

# ----


- name: '{{ rules_cis.rule_4_3.description }}'
  ansible.builtin.shell: /bin/true
  changed_when: no
  register: _output_rule
  ignore_errors: yes
  when:
    - rules_cis.rule_4_3.enabled
  tags:
    - level1
    - level2
    - patch
    - rule_4.3

- name: update_report.yaml
  ansible.builtin.include: update_report.yaml
  vars:
    _current_rule: rule_4_3
    _current_rule_output: '{{ _output_rule }}'
